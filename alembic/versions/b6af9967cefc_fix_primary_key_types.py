"""Fix primary key types

Revision ID: b6af9967cefc
Revises: aa2f8e58d641
Create Date: 2025-07-05 02:40:44.351151

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b6af9967cefc"
down_revision: Union[str, Sequence[str], None] = "aa2f8e58d641"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "players", "id", existing_type=sa.BIGINT(), type_=sa.Integer(), existing_nullable=False, autoincrement=True
    )
    op.alter_column("players", "tournament_id", existing_type=sa.BIGINT(), type_=sa.Integer(), existing_nullable=False)
    op.alter_column(
        "tournaments",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('tournaments_id_seq'::regclass)"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "tournaments",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('tournaments_id_seq'::regclass)"),
    )
    op.alter_column("players", "tournament_id", existing_type=sa.Integer(), type_=sa.BIGINT(), existing_nullable=False)
    op.alter_column(
        "players", "id", existing_type=sa.Integer(), type_=sa.BIGINT(), existing_nullable=False, autoincrement=True
    )
    # ### end Alembic commands ###
